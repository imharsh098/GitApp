{"ast":null,"code":"import { ALL_USERS, RESET_LOADING, RESET_USER, SET_LOADING, SET_USER } from \"../types\";\n\nconst githubReducer = (state, action) => {\n  switch (action.type) {\n    case ALL_USERS:\n      return { ...state,\n        users: action.payload,\n        loading: false\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case SET_USER:\n      return { ...state,\n        user: action.payload.user,\n        repos: action.payload.repos,\n        loading: false\n      };\n\n    case RESET_USER:\n      return { ...state,\n        repos: [],\n        user: {}\n      };\n\n    case RESET_LOADING:\n      return { ...state,\n        loading: false\n      };\n\n    default:\n      {\n        throw Error(\"State Logic Error\");\n      }\n  }\n};\n\nexport default githubReducer;","map":{"version":3,"sources":["/home/goyal/cohort-g/projects/gitfunc/src/context/Github/GithubReducer.js"],"names":["ALL_USERS","RESET_LOADING","RESET_USER","SET_LOADING","SET_USER","githubReducer","state","action","type","users","payload","loading","user","repos","Error"],"mappings":"AAAA,SACEA,SADF,EAEEC,aAFF,EAGEC,UAHF,EAIEC,WAJF,EAKEC,QALF,QAMO,UANP;;AAQA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAFT;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,WAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELK,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKP,QAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELM,QAAAA,IAAI,EAAEL,MAAM,CAACG,OAAP,CAAeE,IAFhB;AAGLC,QAAAA,KAAK,EAAEN,MAAM,CAACG,OAAP,CAAeG,KAHjB;AAILF,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMF,SAAKT,UAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELO,QAAAA,KAAK,EAAE,EAFF;AAGLD,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKX,aAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELK,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF;AAAS;AACP,cAAMG,KAAK,CAAC,mBAAD,CAAX;AACD;AAhCH;AAkCD,CAnCD;;AAqCA,eAAeT,aAAf","sourcesContent":["import {\n  ALL_USERS,\n  RESET_LOADING,\n  RESET_USER,\n  SET_LOADING,\n  SET_USER,\n} from \"../types\";\n\nconst githubReducer = (state, action) => {\n  switch (action.type) {\n    case ALL_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case SET_USER:\n      return {\n        ...state,\n        user: action.payload.user,\n        repos: action.payload.repos,\n        loading: false,\n      };\n    case RESET_USER:\n      return {\n        ...state,\n        repos: [],\n        user: {},\n      };\n    case RESET_LOADING:\n      return {\n        ...state,\n        loading: false, \n      };\n    default: {\n      throw Error(\"State Logic Error\");\n    }\n  }\n};\n\nexport default githubReducer;\n"]},"metadata":{},"sourceType":"module"}