{"ast":null,"code":"// import React, { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport About from \"./components/Layout/About\";\nimport NotFound from \"./components/Layout/NotFound\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Layout/Navbar\";\nimport Users from \"./components/User/Users\";\nimport Search from \"./components/User/Search\";\nimport axios from \"axios\";\nimport User from \"./components/User/User\"; // class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { users: [], loading: true, user: {}, repos: [] };\n//   }\n//   async componentDidMount() {\n//     let res = await axios.get(\"https://api.github.com/users \");\n//     this.setState({ users: res.data, loading: false });\n//   }\n//   searchUsers = async (query) => {\n//     this.setState({ loading: true });\n//     let res = await axios.get(`https://api.github.com/search/users?q=${query}`);\n//     this.setState({ users: res.data.items, loading: false });\n//   };\n//   getUserInfo = async (username) => {\n//     this.setState({ loading: true });\n//     let user = await axios.get(`https://api.github.com/users/${username}`);\n//     let repos = await axios.get(\n//       `https://api.github.com/users/${username}/repos`\n//     );\n//     this.setState({ user: user.data, repos: repos.data, loading: false });\n//   };\n//   resetUserInfo = () => {\n//     this.setState({ user: {}, repos: [] });\n//   };\n//   render() {\n//     return (\n//       <Router>\n//         <div className=\"App\">\n//           <Navbar logo=\"fab fa-github\" appName=\"Github App\" />\n//           <div className=\"container\">\n//             <Switch>\n//               <Route path=\"/about\">\n//                 <Route exact path=\"/about\">\n//                   <About teamMember=\"Us\" />\n//                 </Route>\n//                 <Route exact path=\"/about/mansoor\">\n//                   <About teamMember=\"Mansoor\" />\n//                 </Route>\n//               </Route>\n//               <Route\n//                 path=\"/user/:id\"\n//                 render={(props) => (\n//                   <User\n//                     user={this.state.user}\n//                     repos={this.state.repos}\n//                     getUserInfo={this.getUserInfo}\n//                     laoding={this.state.loading}\n//                     {...props}\n//                   />\n//                 )}\n//               />\n//               <Route exact path=\"/\">\n//                 <Search searchUsers={this.searchUsers} />\n//                 <Users users={this.state.users} loading={this.state.loading} />\n//               </Route>\n//               <Route>\n//                 <NotFound />\n//               </Route>\n//             </Switch>\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n// const App = () => {\n//   const [state, setState] = useState({\n//     users: [],\n//     loading: true,\n//     user: {},\n//     repos: [],\n//   });\n//   useEffect(() => {\n//     let res = axios.get(\"https://api.github.com/users\").then(() => {\n//       setState({...state, users: res.data, loading: false });\n//     });\n//   }, []);\n//   const searchUsers = async (query) => {\n//     setState({ loading: true });\n//     let res = await axios.get(`https://api.github.com/search/users?q=${query}`);\n//     setState({...state, users: res.data.items, loading: false });\n//   };\n//   const getUserInfo = async (username) => {\n//     setState({...state, loading: true });\n//     let user = await axios.get(`https://api.github.com/users/${username}`);\n//     let repos = await axios.get(\n//       `https://api.github.com/users/${username}/repos`\n//     );\n//     setState({ ...state,user: user.data, repos: repos.data, loading: false });\n//   };\n//   const resetUserInfo = () => {\n//     setState({ ...state,user: {}, repos: [] });\n//   };\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Navbar logo=\"fab fa-github\" appName=\"Github App\" />\n//         <div className=\"container\">\n//           <Switch>\n//             <Route path=\"/about\">\n//               <Route exact path=\"/about\">\n//                 <About teamMember=\"Us\" />\n//               </Route>\n//               <Route exact path=\"/about/mansoor\">\n//                 <About teamMember=\"Mansoor\" />\n//               </Route>\n//             </Route>\n//             <Route\n//               path=\"/user/:id\"\n//               render={(props) => (\n//                 <User\n//                   user={state.user}\n//                   repos={state.repos}\n//                   getUserInfo={getUserInfo}\n//                   laoding={state.loading}\n//                   {...props}\n//                 />\n//               )}\n//             />\n//             <Route exact path=\"/\">\n//               <Search searchUsers={searchUsers} />\n//               <Users users={state.users} loading={state.loading} />\n//             </Route>\n//             <Route>\n//               <NotFound />\n//             </Route>\n//           </Switch>\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// };\n\nexport default App;","map":{"version":3,"sources":["/home/goyal/cohort-g/Phase2/week13/gitfunc/src/App.js"],"names":["React","useState","useEffect","About","NotFound","BrowserRouter","Router","Switch","Route","Navbar","Users","Search","axios","User","App"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjeAAeC,GAAf","sourcesContent":["// import React, { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport About from \"./components/Layout/About\";\nimport NotFound from \"./components/Layout/NotFound\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Layout/Navbar\";\nimport Users from \"./components/User/Users\";\nimport Search from \"./components/User/Search\";\nimport axios from \"axios\";\nimport User from \"./components/User/User\";\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { users: [], loading: true, user: {}, repos: [] };\n//   }\n//   async componentDidMount() {\n//     let res = await axios.get(\"https://api.github.com/users \");\n//     this.setState({ users: res.data, loading: false });\n//   }\n//   searchUsers = async (query) => {\n//     this.setState({ loading: true });\n//     let res = await axios.get(`https://api.github.com/search/users?q=${query}`);\n//     this.setState({ users: res.data.items, loading: false });\n//   };\n//   getUserInfo = async (username) => {\n//     this.setState({ loading: true });\n//     let user = await axios.get(`https://api.github.com/users/${username}`);\n//     let repos = await axios.get(\n//       `https://api.github.com/users/${username}/repos`\n//     );\n//     this.setState({ user: user.data, repos: repos.data, loading: false });\n//   };\n//   resetUserInfo = () => {\n//     this.setState({ user: {}, repos: [] });\n//   };\n//   render() {\n//     return (\n//       <Router>\n//         <div className=\"App\">\n//           <Navbar logo=\"fab fa-github\" appName=\"Github App\" />\n//           <div className=\"container\">\n//             <Switch>\n//               <Route path=\"/about\">\n//                 <Route exact path=\"/about\">\n//                   <About teamMember=\"Us\" />\n//                 </Route>\n//                 <Route exact path=\"/about/mansoor\">\n//                   <About teamMember=\"Mansoor\" />\n//                 </Route>\n//               </Route>\n//               <Route\n//                 path=\"/user/:id\"\n//                 render={(props) => (\n//                   <User\n//                     user={this.state.user}\n//                     repos={this.state.repos}\n//                     getUserInfo={this.getUserInfo}\n//                     laoding={this.state.loading}\n//                     {...props}\n//                   />\n//                 )}\n//               />\n//               <Route exact path=\"/\">\n//                 <Search searchUsers={this.searchUsers} />\n//                 <Users users={this.state.users} loading={this.state.loading} />\n//               </Route>\n//               <Route>\n//                 <NotFound />\n//               </Route>\n//             </Switch>\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n// const App = () => {\n//   const [state, setState] = useState({\n//     users: [],\n//     loading: true,\n//     user: {},\n//     repos: [],\n//   });\n//   useEffect(() => {\n//     let res = axios.get(\"https://api.github.com/users\").then(() => {\n//       setState({...state, users: res.data, loading: false });\n//     });\n//   }, []);\n\n//   const searchUsers = async (query) => {\n//     setState({ loading: true });\n//     let res = await axios.get(`https://api.github.com/search/users?q=${query}`);\n//     setState({...state, users: res.data.items, loading: false });\n//   };\n//   const getUserInfo = async (username) => {\n//     setState({...state, loading: true });\n//     let user = await axios.get(`https://api.github.com/users/${username}`);\n//     let repos = await axios.get(\n//       `https://api.github.com/users/${username}/repos`\n//     );\n//     setState({ ...state,user: user.data, repos: repos.data, loading: false });\n//   };\n//   const resetUserInfo = () => {\n//     setState({ ...state,user: {}, repos: [] });\n//   };\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Navbar logo=\"fab fa-github\" appName=\"Github App\" />\n//         <div className=\"container\">\n//           <Switch>\n//             <Route path=\"/about\">\n//               <Route exact path=\"/about\">\n//                 <About teamMember=\"Us\" />\n//               </Route>\n//               <Route exact path=\"/about/mansoor\">\n//                 <About teamMember=\"Mansoor\" />\n//               </Route>\n//             </Route>\n//             <Route\n//               path=\"/user/:id\"\n//               render={(props) => (\n//                 <User\n//                   user={state.user}\n//                   repos={state.repos}\n//                   getUserInfo={getUserInfo}\n//                   laoding={state.loading}\n//                   {...props}\n//                 />\n//               )}\n//             />\n//             <Route exact path=\"/\">\n//               <Search searchUsers={searchUsers} />\n//               <Users users={state.users} loading={state.loading} />\n//             </Route>\n//             <Route>\n//               <NotFound />\n//             </Route>\n//           </Switch>\n//         </div>\n//       </div>\n//     </Router>\n//   );\n// };\nexport default App;\n"]},"metadata":{},"sourceType":"module"}