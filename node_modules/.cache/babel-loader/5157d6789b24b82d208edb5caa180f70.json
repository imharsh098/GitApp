{"ast":null,"code":"var _jsxFileName = \"/home/goyal/cohort-g/Phase2/week13/gitfunc/src/components/User/AllUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Users from \"./Users\";\nimport Search from \"./Search\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AllUsers = props => {\n  _s();\n\n  useEffect(() => {\n    props.getAllUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      searchUsers: props.searchUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Users, {\n      users: props.users,\n      loading: props.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AllUsers, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = AllUsers;\nexport default AllUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllUsers\");","map":{"version":3,"sources":["/home/goyal/cohort-g/Phase2/week13/gitfunc/src/components/User/AllUsers.js"],"names":["React","useEffect","Users","Search","AllUsers","props","getAllUsers","searchUsers","users","loading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1BJ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CAACC,WAAN;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAED,KAAK,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,KAAK,CAACG,KAApB;AAA2B,MAAA,OAAO,EAAEH,KAAK,CAACI;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAVD;;GAAML,Q;;KAAAA,Q;AAWN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport Users from \"./Users\";\nimport Search from \"./Search\";\n\nconst AllUsers = (props) => {\n  useEffect(() => {\n    props.getAllUsers();\n  }, []);\n  return (\n    <>\n      <Search searchUsers={props.searchUsers} />\n      <Users users={props.users} loading={props.loading} />\n    </>\n  );\n};\nexport default AllUsers;\n"]},"metadata":{},"sourceType":"module"}