{"ast":null,"code":"var _jsxFileName = \"/home/goyal/cohort-g/Phase2/week13/gitfunc/src/App.js\",\n    _s = $RefreshSig$();\n\n// import React, { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport About from \"./components/Layout/About\";\nimport NotFound from \"./components/Layout/NotFound\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Layout/Navbar\";\nimport AllUsers from \"./components/User/AllUsers\";\nimport axios from \"axios\";\nimport User from \"./components/User/User\"; // class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { users: [], loading: true, user: {}, repos: [] };\n//   }\n//   async componentDidMount() {\n//     let res = await axios.get(\"https://api.github.com/users \");\n//     this.setState({ users: res.data, loading: false });\n//   }\n//   searchUsers = async (query) => {\n//     this.setState({ loading: true });\n//     let res = await axios.get(`https://api.github.com/search/users?q=${query}`);\n//     this.setState({ users: res.data.items, loading: false });\n//   };\n//   getUserInfo = async (username) => {\n//     this.setState({ loading: true });\n//     let user = await axios.get(`https://api.github.com/users/${username}`);\n//     let repos = await axios.get(\n//       `https://api.github.com/users/${username}/repos`\n//     );\n//     this.setState({ user: user.data, repos: repos.data, loading: false });\n//   };\n//   resetUserInfo = () => {\n//     this.setState({ user: {}, repos: [] });\n//   };\n//   render() {\n//     return (\n//       <Router>\n//         <div className=\"App\">\n//           <Navbar logo=\"fab fa-github\" appName=\"Github App\" />\n//           <div className=\"container\">\n//             <Switch>\n//               <Route path=\"/about\">\n//                 <Route exact path=\"/about\">\n//                   <About teamMember=\"Us\" />\n//                 </Route>\n//                 <Route exact path=\"/about/mansoor\">\n//                   <About teamMember=\"Mansoor\" />\n//                 </Route>\n//               </Route>\n//               <Route\n//                 path=\"/user/:id\"\n//                 render={(props) => (\n//                   <User\n//                     user={this.state.user}\n//                     repos={this.state.repos}\n//                     getUserInfo={this.getUserInfo}\n//                     laoding={this.state.loading}\n//                     {...props}\n//                   />\n//                 )}\n//               />\n//               <Route exact path=\"/\">\n//                 <Search searchUsers={this.searchUsers} />\n//                 <Users users={this.state.users} loading={this.state.loading} />\n//               </Route>\n//               <Route>\n//                 <NotFound />\n//               </Route>\n//             </Switch>\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [state, setState] = useState({\n    users: [],\n    loading: true,\n    user: {},\n    repos: []\n  });\n\n  const getAllUsers = () => {\n    axios.get(\"https://api.github.com/users\").then(res => {\n      setState({ ...state,\n        users: res.data,\n        loading: false\n      });\n    });\n  };\n\n  const searchUsers = async query => {\n    setState({\n      loading: true\n    });\n    let res = await axios.get(`https://api.github.com/search/users?q=${query}`);\n    setState({ ...state,\n      users: res.data.items,\n      loading: false\n    });\n  };\n\n  const getUserInfo = async username => {\n    setState({ ...state,\n      loading: true\n    });\n    let user = await axios.get(`https://api.github.com/users/${username}`);\n    let repos = await axios.get(`https://api.github.com/users/${username}/repos`);\n    setState({ ...state,\n      user: user.data,\n      repos: repos.data,\n      loading: false\n    });\n  };\n\n  const resetUserInfo = () => {\n    setState({ ...state,\n      user: {},\n      repos: []\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      style: {\n        backgroundColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        logo: \"fab fa-github\",\n        appName: \"Github App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about\",\n              children: /*#__PURE__*/_jsxDEV(About, {\n                teamMember: \"Us\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/about/mansoor\",\n              children: /*#__PURE__*/_jsxDEV(About, {\n                teamMember: \"Mansoor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/user/:id\",\n            render: props => /*#__PURE__*/_jsxDEV(User, {\n              user: state.user,\n              repos: state.repos,\n              getUserInfo: getUserInfo,\n              laoding: state.loading,\n              ...props\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(AllUsers, {\n              searchUsers: searchUsers,\n              loading: state.loading,\n              users: state.users,\n              getAllUsers: getAllUsers\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5grZnQ5OBeu0hQNGfXiJrq1+cjU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/goyal/cohort-g/Phase2/week13/gitfunc/src/App.js"],"names":["React","useState","useEffect","About","NotFound","BrowserRouter","Router","Switch","Route","Navbar","AllUsers","axios","User","App","state","setState","users","loading","user","repos","getAllUsers","get","then","res","data","searchUsers","query","items","getUserInfo","username","resetUserInfo","backgroundColor","props"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\nimport React, { useState, useEffect } from \"react\";\nimport About from \"./components/Layout/About\";\nimport NotFound from \"./components/Layout/NotFound\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/Layout/Navbar\";\nimport AllUsers from \"./components/User/AllUsers\";\nimport axios from \"axios\";\nimport User from \"./components/User/User\";\n// class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { users: [], loading: true, user: {}, repos: [] };\n//   }\n//   async componentDidMount() {\n//     let res = await axios.get(\"https://api.github.com/users \");\n//     this.setState({ users: res.data, loading: false });\n//   }\n//   searchUsers = async (query) => {\n//     this.setState({ loading: true });\n//     let res = await axios.get(`https://api.github.com/search/users?q=${query}`);\n//     this.setState({ users: res.data.items, loading: false });\n//   };\n//   getUserInfo = async (username) => {\n//     this.setState({ loading: true });\n//     let user = await axios.get(`https://api.github.com/users/${username}`);\n//     let repos = await axios.get(\n//       `https://api.github.com/users/${username}/repos`\n//     );\n//     this.setState({ user: user.data, repos: repos.data, loading: false });\n//   };\n//   resetUserInfo = () => {\n//     this.setState({ user: {}, repos: [] });\n//   };\n//   render() {\n//     return (\n//       <Router>\n//         <div className=\"App\">\n//           <Navbar logo=\"fab fa-github\" appName=\"Github App\" />\n//           <div className=\"container\">\n//             <Switch>\n//               <Route path=\"/about\">\n//                 <Route exact path=\"/about\">\n//                   <About teamMember=\"Us\" />\n//                 </Route>\n//                 <Route exact path=\"/about/mansoor\">\n//                   <About teamMember=\"Mansoor\" />\n//                 </Route>\n//               </Route>\n//               <Route\n//                 path=\"/user/:id\"\n//                 render={(props) => (\n//                   <User\n//                     user={this.state.user}\n//                     repos={this.state.repos}\n//                     getUserInfo={this.getUserInfo}\n//                     laoding={this.state.loading}\n//                     {...props}\n//                   />\n//                 )}\n//               />\n//               <Route exact path=\"/\">\n//                 <Search searchUsers={this.searchUsers} />\n//                 <Users users={this.state.users} loading={this.state.loading} />\n//               </Route>\n//               <Route>\n//                 <NotFound />\n//               </Route>\n//             </Switch>\n//           </div>\n//         </div>\n//       </Router>\n//     );\n//   }\n// }\nconst App = () => {\n  const [state, setState] = useState({\n    users: [],\n    loading: true,\n    user: {},\n    repos: [],\n  });\n  const getAllUsers = () => {\n    axios.get(\"https://api.github.com/users\").then((res) => {\n      setState({ ...state, users: res.data, loading: false });\n    });\n  };\n\n  const searchUsers = async (query) => {\n    setState({ loading: true });\n    let res = await axios.get(`https://api.github.com/search/users?q=${query}`);\n    setState({ ...state, users: res.data.items, loading: false });\n  };\n  const getUserInfo = async (username) => {\n    setState({ ...state, loading: true });\n    let user = await axios.get(`https://api.github.com/users/${username}`);\n    let repos = await axios.get(\n      `https://api.github.com/users/${username}/repos`\n    );\n    setState({ ...state, user: user.data, repos: repos.data, loading: false });\n  };\n  const resetUserInfo = () => {\n    setState({ ...state, user: {}, repos: [] });\n  };\n  return (\n    <Router>\n      <div className=\"App\" style={{backgroundColor}}>\n        <Navbar logo=\"fab fa-github\" appName=\"Github App\" />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/about\">\n              <Route exact path=\"/about\">\n                <About teamMember=\"Us\" />\n              </Route>\n              <Route exact path=\"/about/mansoor\">\n                <About teamMember=\"Mansoor\" />\n              </Route>\n            </Route>\n            <Route\n              path=\"/user/:id\"\n              render={(props) => (\n                <User\n                  user={state.user}\n                  repos={state.repos}\n                  getUserInfo={getUserInfo}\n                  laoding={state.loading}\n                  {...props}\n                />\n              )}\n            />\n            <Route exact path=\"/\">\n              <AllUsers\n                searchUsers={searchUsers}\n                loading={state.loading}\n                users={state.users}\n                getAllUsers={getAllUsers}\n              />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}